{"version":3,"sources":["../../../src/services/fleetDataService.js"],"names":["Object","defineProperty","exports","value","FleetDataService","undefined","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_Car","require","_Drone","_DataError","_classCallCheck","instance","TypeError","cars","drones","errors","getCarByLicense","license","find","car","getCarsSortedByLicense","sort","car1","car2","filterCarsByMake","filter","make","indexOf","loadData","fleet","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","Symbol","iterator","_step","next","done","data","type","validateCarData","loadCar","push","_e","DataError","drone","loadDrone","e","err","return","c","Car","model","latLong","miles","requiredProps","split","hasErrors","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","field","Number","isNaN","parseFloat","d","Drone","airTimeHours","base"],"mappings":"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","file":"fleetDataService.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.FleetDataService = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Car = require(\"../classes/Car.js\");\n\nvar _Drone = require(\"../classes/Drone.js\");\n\nvar _DataError = require(\"./DataError.js\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar FleetDataService = exports.FleetDataService = function () {\n    function FleetDataService() {\n        _classCallCheck(this, FleetDataService);\n\n        this.cars = [];\n        this.drones = [];\n        this.errors = [];\n    }\n\n    _createClass(FleetDataService, [{\n        key: \"getCarByLicense\",\n        value: function getCarByLicense(license) {\n            return this.cars.find(function (car) {\n                return car.license === license;\n            });\n        }\n    }, {\n        key: \"getCarsSortedByLicense\",\n        value: function getCarsSortedByLicense() {\n            return this.cars.sort(function (car1, car2) {\n                if (car1.license < car2.license) {\n                    return -1;\n                }\n                if (car1.license > car2.license) {\n                    return 1;\n                }\n                return 0;\n            });\n        }\n    }, {\n        key: \"filterCarsByMake\",\n        value: function filterCarsByMake(filter) {\n            return this.cars.filter(function (car) {\n                return car.make.indexOf(filter) >= 0;\n            });\n        }\n    }, {\n        key: \"loadData\",\n        value: function loadData(fleet) {\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = fleet[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var data = _step.value;\n\n                    switch (data.type) {\n                        case 'car':\n                            if (this.validateCarData(data)) {\n                                var car = this.loadCar(data);\n                                if (car) {\n                                    this.cars.push(car);\n                                }\n                            } else {\n                                var _e = new _DataError.DataError('Car data is not valid', data);\n                                this.errors.push(_e);\n                            }\n                            break;\n                        case 'drone':\n                            var drone = this.loadDrone(data);\n                            this.drones.push(drone);\n                            break;\n                        default:\n                            var e = new _DataError.DataError('invalid vehicle type', data);\n                            this.errors.push(e);\n                            break;\n                    }\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n        }\n    }, {\n        key: \"loadCar\",\n        value: function loadCar(car) {\n            try {\n                var c = new _Car.Car(car.license, car.model, car.latLong);\n                c.make = car.make;\n                c.miles = car.miles;\n                return c;\n            } catch (e) {\n                this.errors.push(new _DataError.DataError('error loading car', e));\n            }\n            return null;\n        }\n    }, {\n        key: \"validateCarData\",\n        value: function validateCarData(car) {\n            var requiredProps = 'license make model miles latLong'.split(' ');\n            var hasErrors = false;\n\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = requiredProps[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var field = _step2.value;\n\n                    if (!car[field]) {\n                        this.errors.push(new _DataError.DataError(\"invalid field of car: \" + field, car));\n                        hasErrors = true;\n                    }\n                }\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n\n            if (Number.isNaN(Number.parseFloat(car.miles))) {\n                this.errors.push(new _DataError.DataError('miles is not a number', car));\n                hasErrors = true;\n            }\n\n            return !hasErrors;\n        }\n    }, {\n        key: \"loadDrone\",\n        value: function loadDrone(drone) {\n            try {\n                var d = new _Drone.Drone(drone.license, drone.model, drone.latLong);\n                d.airTimeHours = drone.airTimeHours;\n                d.base = drone.base;\n                return d;\n            } catch (e) {\n                this.errors.push(new _DataError.DataError('error loading drones', e));\n            }\n            return null;\n        }\n    }]);\n\n    return FleetDataService;\n}();\n//# sourceMappingURL=fleetDataService.js.map"]}