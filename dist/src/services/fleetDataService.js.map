{"version":3,"sources":["../../../src/services/fleetDataService.js"],"names":["FleetDataService","cars","drones","errors","fleet","data","type","car","loadCar","push","drone","loadDrone","e","c","license","model","latLong","make","miles","d","airTimeHours","base"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;;IAEaA,gB,WAAAA,gB;AAET,gCAAc;AAAA;;AACV,aAAKC,IAAL,GAAY,EAAZ;AACA,aAAKC,MAAL,GAAc,EAAd;AACA,aAAKC,MAAL,GAAc,EAAd;AACH;;;;iCAEQC,K,EAAO;AAAA;AAAA;AAAA;;AAAA;AACZ,qCAAiBA,KAAjB,8HAAwB;AAAA,wBAAfC,IAAe;;AACpB,4BAAQA,KAAKC,IAAb;AACI,6BAAK,KAAL;AACI,gCAAIC,MAAM,KAAKC,OAAL,CAAaH,IAAb,CAAV;AACA,iCAAKJ,IAAL,CAAUQ,IAAV,CAAeF,GAAf;AACA;AACJ,6BAAK,OAAL;AACI,gCAAIG,QAAQ,KAAKC,SAAL,CAAeN,IAAf,CAAZ;AACA,iCAAKH,MAAL,CAAYO,IAAZ,CAAiBC,KAAjB;AACA;AACJ;AACI,gCAAIE,IAAI,yBAAc,sBAAd,EAAsCP,IAAtC,CAAR;AACA,iCAAKF,MAAL,CAAYM,IAAZ,CAAiBG,CAAjB;AACA;AAZR;AAcH;AAhBW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBf;;;gCAEOL,G,EAAK;AACT,gBAAI;AACA,oBAAIM,IAAI,aAAQN,IAAIO,OAAZ,EAAqBP,IAAIQ,KAAzB,EAAgCR,IAAIS,OAApC,CAAR;AACAH,kBAAEI,IAAF,GAASV,IAAIU,IAAb;AACAJ,kBAAEK,KAAF,GAAUX,IAAIW,KAAd;AACA,uBAAOL,CAAP;AACH,aALD,CAKE,OAAOD,CAAP,EAAU;AACR,qBAAKT,MAAL,CAAYM,IAAZ,CAAiB,yBAAc,mBAAd,EAAmCG,CAAnC,CAAjB;AACH;AACD,mBAAO,IAAP;AACH;;;kCAESF,K,EAAO;AACb,gBAAI;AACA,oBAAIS,IAAI,iBAAUT,MAAMI,OAAhB,EAAyBJ,MAAMK,KAA/B,EAAsCL,MAAMM,OAA5C,CAAR;AACAG,kBAAEC,YAAF,GAAiBV,MAAMU,YAAvB;AACAD,kBAAEE,IAAF,GAASX,MAAMW,IAAf;AACA,uBAAOF,CAAP;AACH,aALD,CAKE,OAAOP,CAAP,EAAU;AACR,qBAAKT,MAAL,CAAYM,IAAZ,CAAiB,yBAAc,sBAAd,EAAsCG,CAAtC,CAAjB;AACH;AACD,mBAAO,IAAP;AACH","file":"fleetDataService.js","sourcesContent":["import {Car} from \"../classes/Car.js\";\r\nimport {Drone} from \"../classes/Drone.js\";\r\nimport {DataError} from \"./DataError.js\";\r\n\r\nexport class FleetDataService {\r\n\r\n    constructor() {\r\n        this.cars = [];\r\n        this.drones = [];\r\n        this.errors = [];\r\n    }\r\n\r\n    loadData(fleet) {\r\n        for (let data of fleet) {\r\n            switch (data.type) {\r\n                case 'car':\r\n                    let car = this.loadCar(data);\r\n                    this.cars.push(car);\r\n                    break;\r\n                case 'drone':\r\n                    let drone = this.loadDrone(data);\r\n                    this.drones.push(drone);\r\n                    break;\r\n                default:\r\n                    let e = new DataError('invalid vehicle type', data);\r\n                    this.errors.push(e);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    loadCar(car) {\r\n        try {\r\n            let c = new Car(car.license, car.model, car.latLong);\r\n            c.make = car.make;\r\n            c.miles = car.miles;\r\n            return c;\r\n        } catch (e) {\r\n            this.errors.push(new DataError('error loading car', e));\r\n        }\r\n        return null;\r\n    }\r\n\r\n    loadDrone(drone) {\r\n        try {\r\n            let d = new Drone(drone.license, drone.model, drone.latLong);\r\n            d.airTimeHours = drone.airTimeHours;\r\n            d.base = drone.base;\r\n            return d;\r\n        } catch (e) {\r\n            this.errors.push(new DataError('error loading drones', e));\r\n        }\r\n        return null;\r\n    }\r\n}"]}